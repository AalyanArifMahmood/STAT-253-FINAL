lasso_fit <- lasso_wf %>%
fit(data = Credit)
# Tune the LASSO model
glmnet_output <-
lasso_fit %>% extract_fit_parsnip() %>% pluck('fit')
lambdas <- glmnet_output$lambda
coefs_lambdas <-
coefficients(glmnet_output, s = lambdas)  %>%
as.matrix() %>%
t() %>%
as.data.frame() %>%
mutate(lambda = lambdas) %>%
select(lambda, everything(),-`(Intercept)`) %>%
pivot_longer(cols = -lambda,
names_to = "term",
values_to = "coef") %>%
mutate(var = map_chr(stringr::str_split(term, "_"),  ~ .[1]))
coefs_lambdas %>%
ggplot(aes(
x = lambda,
y = coef,
group = term,
color = var
)) +
geom_line() +
theme_classic() +
theme(legend.position = "bottom", legend.text = element_text(size = 8))
# Visualize the best penalty term
penalty_grid <- grid_regular(penalty(range = c(-3, 3)),
levels = 20)
lasso_cv <- tune_grid(
lasso_wf,
resamples = Credit_cv5,
metrics = metric_set(rmse, mae, rsq),
grid = penalty_grid
)
autoplot(lasso_cv) + theme_classic()
lasso_fit <- fit(lasso_wf2, data = Credit)
# Present the LASSO model result
best_penalty <- select_best(lasso_cv, metric = 'rmse')
lasso_wf2 <- finalize_workflow(lasso_wf, best_penalty)
lasso_fit <- fit(lasso_wf2, data = Credit)
tidy(lasso_fit)
#  Calculate and collect CV metrics for LASSO
lasso_output <- lasso_cv %>% collect_metrics(summarize = TRUE) %>%
na.omit() %>%
group_by(.metric) %>%
summarize(mean = mean(mean))
lasso_output
# Visualize the residual plot for LASSO
lasso_output2 <- lasso_fit %>%
predict(new_data = titanic_r) %>%
bind_cols(titanic_r) %>%
mutate(resid = Fare - .pred)
# Visualize the residual plot for LASSO
lasso_output2 <- lasso_fit %>%
predict(new_data = Credit) %>%
bind_cols(titanic_r) %>%
mutate(resid = Fare - .pred)
# Visualize the residual plot for LASSO
lasso_output2 <- lasso_fit %>%
predict(new_data = Credit) %>%
bind_cols(Credit) %>%
mutate(resid = Fare - .pred)
# Visualize the residual plot for LASSO
lasso_output2 <- lasso_fit %>%
predict(new_data = Credit) %>%
bind_cols(Credit) %>%
mutate(resid = Limit - .pred)
ggplot(lasso_output2, aes(x = .pred, y = resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
View(Credit)
View(Credit)
Credit %>%
ggplot(aes(x = Limit,
y = Rating)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
Pokemon_890 <- read_csv("Data/pokedex_(Update_05.20).csv") %>%
mutate(Name = name) %>%
select(-name)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
Pokemon_890 <- read_csv("Data/pokedex_(Update_05.20).csv") %>%
mutate(Name = name) %>%
select(-name)
Pokemon_721 <- read_csv("Data/Pokemon.csv")
Pokemon_final <- Pokemon_721 %>%
left_join(Pokemon_890,
by = "Name") %>%
select(c("#", Name, `Type 1`, `Type 2`, Total, HP, Attack, Defense, `Sp. Atk`, `Sp. Def`, Speed, Generation, Legendary, status, species, height_m, weight_kg, abilities_number, catch_rate, base_friendship, growth_rate)) %>%
distinct()
Pokemon_final
View(Pokemon_final)
Pokemon_1 <- Pokemon_final %>%
select(Attack, `Sp. Atk`)
library(tidyverse)
library(ggplot2)
ibrary(dplyr)
library(tidyverse)
library(ggplot2)
library(dplyr)
Pokemon_final <- Pokemon_721 %>%
left_join(Pokemon_890,
by = "Name") %>%
select(c("#", Name, `Type 1`, `Type 2`, Total, HP, Attack, Defense, `Sp. Atk`, `Sp. Def`, Speed, Generation, Legendary, status, species, height_m, weight_kg, abilities_number, catch_rate, base_friendship, growth_rate)) %>%
distinct()
Pokemon_1 <- Pokemon_final %>%
select(Attack, `Sp. Atk`)
Pokemon_1 %>%
ggplot(aes(x = Attack,
y = `Sp. Atk`)) +
geom_point()
Pokemon_final %>%
ggplot(aes(x = Defense,
y = `Sp. Def`)) +
geom_point()
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_1), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, penguin_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_1), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
library(tidyverse)
library(ggplot2)
library(dplyr)
set.seed(123)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_1), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_1_k4 <- kmeans(Pokemon_1, centers = 4)
kclust_1_k4 <- kmeans(Pokemon_1, centers = 4)
Pokemon_1 <- Pokemon_1 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
kclust_1_k4 <- kmeans(Pokemon_1, centers = 4)
Pokemon_1 <- Pokemon_1 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_final %>%
ggplot(aes(x = Attack,
y = `Sp. Atk`,
color = kclust_4)) +
geom_point()
kclust_1_k4 <- kmeans(Pokemon_1, centers = 4)
Pokemon_1 <- Pokemon_1 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_1 %>%
ggplot(aes(x = Attack,
y = `Sp. Atk`,
color = kclust_4)) +
geom_point()
kclust_1_k4
kclust_1_k4$cluster
Pokemon_1_final <- Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster)) %>%
group_by(`Type 1`, kclust_4) %>%
summarize(sum = n())
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n())
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n()) %>%
arrange(desc(sum))
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n()) %>%
ungroup() %>%
group_by(kclust_4) %>%
arrange(desc(sum))
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n())
kclust_1_k4 <- kmeans(Pokemon_1, centers = 4)
Pokemon_1 <- Pokemon_1 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_final %>%
ggplot(aes(x = Attack,
y = `Sp. Atk`)) +
geom_point()
Pokemon_1 %>%
ggplot(aes(x = Attack,
y = `Sp. Atk`,
color = kclust_4)) +
geom_point()
kclust_1_k4 <- kmeans(Pokemon_1, centers = 4)
Pokemon_1 <- Pokemon_1 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_1 %>%
ggplot(aes(x = Attack,
y = `Sp. Atk`,
color = kclust_4)) +
geom_point()
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k, data){
# Perform clustering
kclust <- kmeans(scale(data), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss(Pokemon_1))
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
Pokemon_2 <- Pokemon_final %>%
select(Defense, `Sp. Def`)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_2), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
Pokemon_2 <- Pokemon_final %>%
select(Defense, `Sp. Def`)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_2), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_2_k4 <- kmeans(Pokemon_2, centers = 4)
Pokemon_2 <- Pokemon_2 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_2 %>%
ggplot(aes(x = Defense,
y = `Sp. Def`,
color = kclust_4)) +
geom_point()
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_2_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n())
Pokemon_3 <- Pokemon_final %>%
select(`Sp. Atk`, Speed)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_3), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
Pokemon_3 <- Pokemon_final %>%
select(`Sp. Atk`, Speed)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_3), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_3_k4 <- kmeans(Pokemon_3, centers = 4)
Pokemon_3 <- Pokemon_3 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_3 %>%
ggplot(aes(x = `Sp. Atk`,
y = Speed,
color = kclust_4)) +
geom_point()
kclust_3_k4 <- kmeans(Pokemon_3, centers = 3)
Pokemon_3 <- Pokemon_3 %>%
mutate(kclust_4 = factor(kclust_1_k4$cluster))
Pokemon_3 %>%
ggplot(aes(x = `Sp. Atk`,
y = Speed,
color = kclust_4)) +
geom_point()
Pokemon_3 <- Pokemon_final %>%
select(`Sp. Atk`, Speed)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_3), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_3_k4 <- kmeans(Pokemon_3, centers = 3)
Pokemon_3 <- Pokemon_3 %>%
mutate(kclust_3 = factor(kclust_1_k4$cluster))
Pokemon_3 %>%
ggplot(aes(x = `Sp. Atk`,
y = Speed,
color = kclust_4)) +
geom_point()
Pokemon_2 <- Pokemon_final %>%
select(Defense, `Sp. Def`)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_2), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_2_k4 <- kmeans(Pokemon_2, centers = 4)
Pokemon_2 <- Pokemon_2 %>%
mutate(kclust_4 = factor(kclust_2_k4$cluster))
Pokemon_2 %>%
ggplot(aes(x = Defense,
y = `Sp. Def`,
color = kclust_4)) +
geom_point()
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_2_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n())
Pokemon_3 <- Pokemon_final %>%
select(`Sp. Atk`, Speed)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_3), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_3_k4 <- kmeans(Pokemon_3, centers = 3)
Pokemon_3 <- Pokemon_3 %>%
mutate(kclust_3 = factor(kclust_3_k4$cluster))
Pokemon_3 %>%
ggplot(aes(x = `Sp. Atk`,
y = Speed,
color = kclust_4)) +
geom_point()
Pokemon_3 <- Pokemon_final %>%
select(`Sp. Atk`, Speed)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_3), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_3_k4 <- kmeans(Pokemon_3, centers = 4)
Pokemon_3 <- Pokemon_3 %>%
mutate(kclust_4 = factor(kclust_3_k4$cluster))
Pokemon_3 %>%
ggplot(aes(x = `Sp. Atk`,
y = Speed,
color = kclust_4)) +
geom_point()
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_3_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n())
Pokemon_4 <- Pokemon_final %>%
select(Defense, HP)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_4), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_4_k4 <- kmeans(Pokemon_4, centers = 4)
Pokemon_4 <- Pokemon_4 %>%
mutate(kclust_4 = factor(kclust_4_k4$cluster))
Pokemon_3 %>%
ggplot(aes(x = Defense,
y = HP,
color = kclust_4)) +
geom_point()
Pokemon_4 <- Pokemon_final %>%
select(Defense, HP)
# Data-specific function to cluster and calculate total within-cluster SS
pokemon_cluster_ss <- function(k){
# Perform clustering
kclust <- kmeans(scale(Pokemon_4), centers = k)
# Return the total within-cluster sum of squares
return(kclust$tot.withinss)
}
tibble(
k = 1:15,
tot_wc_ss = purrr::map_dbl(1:15, pokemon_cluster_ss)
) %>%
ggplot(aes(x = k, y = tot_wc_ss)) +
geom_point() +
labs(x = "Number of clusters",y = 'Total within-cluster sum of squares') +
theme_classic()
kclust_4_k4 <- kmeans(Pokemon_4, centers = 4)
Pokemon_4 <- Pokemon_4 %>%
mutate(kclust_4 = factor(kclust_4_k4$cluster))
Pokemon_4 %>%
ggplot(aes(x = Defense,
y = HP,
color = kclust_4)) +
geom_point()
Pokemon_final %>%
mutate(kclust_4 = factor(kclust_4_k4$cluster)) %>%
group_by(kclust_4, `Type 1`) %>%
summarize(sum = n())
