step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
knitr::opts_chunk$set(echo = TRUE)
# library statements
library(readr)
library(ggplot2)
library(dplyr)
library(tidymodels)
tidymodels_prefer()
set.seed(123)
# read in data
Stock <- read_csv("indexData.csv")
# data cleaning
Stock_clean <- Stock %>%
select(Index : Close) %>%
na.omit() %>%
filter(Open != "null",
High != "null",
Low != "null",
Close != "null")
Stock_clean %>%
group_by(Index) %>%
summarize(n = n()) %>%
arrange(desc(n))
Stock_clean <- Stock_clean %>%
filter(Index == "NYA") %>%
mutate(Open = as.numeric(Open),
High = as.numeric(High),
Low = as.numeric(Low),
Close = as.numeric(Close))
Stock_clean %>%
ggplot() +
geom_line(aes(x = Date,
y = Open))
Stock_clean <- Stock_clean %>%
mutate(Date = as.numeric(Date))
# creation of cv folds
Stock_clean_5 <- vfold_cv(Stock_clean, v = 5)
# model spec
lm_spec <-
linear_reg() %>%
set_engine(engine = "lm") %>%
set_mode("regression")
lm_lasso_spec <-
linear_reg() %>%
set_args(mixture = 1, penalty = tune()) %>%
set_engine(engine = 'glmnet') %>%
set_mode('regression')
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
data_rec
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_wf
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
lm_lasso_wf
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_wf
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
# recipes
data_rec <- recipe(Close ~ Open + High + Low, data = Stock_clean) %>%
step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean)
# step_nzv(all_predictors()) %>%
# step_normalize(all_numeric_predictors()) %>%
# step_dummy(all_nominal_predictors()) %>%
# step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
glmnet_output <- lm_lasso_fit %>% extract_fit_parsnip() %>% pluck('fit')
lambdas <- glmnet_output$lambda
coefs_lambdas <-
coefficients(glmnet_output, s = lambdas )  %>%
as.matrix() %>%
t() %>%
as.data.frame() %>%
mutate(lambda = lambdas ) %>%
select(lambda, everything(), -`(Intercept)`) %>%
pivot_longer(cols = -lambda,
names_to = "term",
values_to = "coef") %>%
mutate(var = map_chr(stringr::str_split(term,"_"),~.[1]))
coefs_lambdas %>%
ggplot(aes(x = lambda, y = coef, group = term, color = var)) +
geom_line() +
theme_classic() +
theme(legend.position = "bottom", legend.text=element_text(size=8))
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
# step_nzv(all_predictors()) %>%
# step_normalize(all_numeric_predictors()) %>%
# step_dummy(all_nominal_predictors()) %>%
# step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
step_nzv(all_predictors()) %>%
# step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
# step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
# step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
# recipes
data_rec <- recipe(Close ~ Date + Open + High + Low, data = Stock_clean) %>%
step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
# step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Stock_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Stock_clean)
glmnet_output <- lm_lasso_fit %>% extract_fit_parsnip() %>% pluck('fit')
lambdas <- glmnet_output$lambda
coefs_lambdas <-
coefficients(glmnet_output, s = lambdas )  %>%
as.matrix() %>%
t() %>%
as.data.frame() %>%
mutate(lambda = lambdas ) %>%
select(lambda, everything(), -`(Intercept)`) %>%
pivot_longer(cols = -lambda,
names_to = "term",
values_to = "coef") %>%
mutate(var = map_chr(stringr::str_split(term,"_"),~.[1]))
coefs_lambdas %>%
ggplot(aes(x = lambda, y = coef, group = term, color = var)) +
geom_line() +
theme_classic() +
theme(legend.position = "bottom", legend.text=element_text(size=8))
knitr::opts_chunk$set(echo = TRUE)
# library statements
library(readr)
library(ggplot2)
library(dplyr)
library(tidymodels)
tidymodels_prefer()
set.seed(123)
# read in data
Titanic <- read_csv("train.csv")
# data cleaning
Titanic_clean <- Titanic %>%
select(Survived, Pclass, Sex, Age, SibSp, Parch, Fare, Embarked) %>%
na.omit()
Titanic_clean
# creation of cv folds
Titanic_clean_5 <- vfold_cv(Titanic_clean, v = 5)
# model spec
lm_spec <-
linear_reg() %>%
set_engine(engine = "lm") %>%
set_mode("regression")
lm_lasso_spec <-
linear_reg() %>%
set_args(mixture = 1, penalty = tune()) %>%
set_engine(engine = 'glmnet') %>%
set_mode('regression')
# recipes
data_rec <- recipe(Fare ~ ., data = Titanic_clean) %>%
step_nzv(all_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric_predictors())
# workflows
lm_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_spec)
lm_lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
# fit & tune models
fit_lm_model <- fit(lm_wf, Titanic_clean)
tidy(fit_lm_model)
lm_lasso_fit <- lm_lasso_wf %>%
fit(data = Titanic_clean)
glmnet_output <- lm_lasso_fit %>% extract_fit_parsnip() %>% pluck('fit') # way to get the original glmnet output
lambdas <- glmnet_output$lambda
coefs_lambdas <-
coefficients(glmnet_output, s = lambdas )  %>%
as.matrix() %>%
t() %>%
as.data.frame() %>%
mutate(lambda = lambdas ) %>%
select(lambda, everything(), -`(Intercept)`) %>%
pivot_longer(cols = -lambda,
names_to = "term",
values_to = "coef") %>%
mutate(var = map_chr(stringr::str_split(term,"_"),~.[1]))
coefs_lambdas %>%
ggplot(aes(x = lambda, y = coef, group = term, color = var)) +
geom_line() +
theme_classic() +
theme(legend.position = "bottom", legend.text=element_text(size=8))
#  calculate/collect CV metrics
#  For linear regression
lm_result_5 <- fit_resamples(lm_wf,
resamples = Titanic_clean_5,
metrics = metric_set(rmse, rsq, mae))
collect_metrics(lm_result_5)
#  for LASSO
penalty_grid <- grid_regular(
penalty(range = c(-3, 3)),
levels = 20)
tune_res <- tune_grid(
lm_lasso_wf,
resamples = Titanic_clean_5,
metrics = metric_set(rmse, mae),
grid = penalty_grid
)
autoplot(tune_res) + theme_classic()
best_penalty <- select_best(tune_res, metric = 'rmse')
final_wf <- finalize_workflow(lm_lasso_wf, best_penalty)
final_fit <- fit(final_wf, data = Titanic_clean)
tidy(final_fit)
tune_res %>% collect_metrics(summarize = TRUE) %>%
filter(.metric == "rmse") %>%
summarize(mean = mean(mean))
#  visual residuals
lm_model_output <- fit_lm_model %>%
predict(new_data = Titanic_clean) %>%
bind_cols(Titanic_clean) %>%
mutate(resid = Fare - .pred)
ggplot(lm_model_output, aes(x = .pred, y = resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
lasso_model_output <- final_fit %>%
predict(new_data = Titanic_clean) %>%
bind_cols(Titanic_clean) %>%
mutate(resid = Fare - .pred)
ggplot(lasso_model_output, aes(x = .pred, y = resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
View(Titanic_clean)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
fit_gam_model %>% pluck('fit') %>% summary()
gam_model %>% pluck('fit') %>% summary()
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
gam_mod %>% pluck('fit') %>% summary()
par(mfrow=c(2,2))
gam_mod %>% pluck('fit') %>% mgcv::gam.check()
gam_mod %>% pluck('fit') %>% plot()
gam_mod %>% pluck('fit') %>% summary()
gam_mod %>% pluck('fit') %>% plot()
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
gam_mod %>% pluck('fit') %>% plot( all.terms = TRUE, pages = 1)
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
gam_mod %>% pluck('fit') %>% plot()
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + Pclass + Sex + Age + s(SibSp) + Parch + Embarked,
data = Titanic_clean
)
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + s(Pclass) + Sex + Age + s(SibSp) + Parch + Embarked,
data = Titanic_clean
)
set.seed(123)
gam_spec <-
gen_additive_mod() %>%
set_engine(engine = 'mgcv') %>%
set_mode('regression')
gam_mod <- fit(gam_spec,
Fare ~ Survived + s(Pclass) + Sex + Age + SibSp + Parch + Embarked,
data = Titanic_clean
)
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
spline_rec <- data_rec %>%
step_ns(Pclass, deg_free = 10)
college_wf <- workflow() %>%
add_model(lm_spec) %>%
add_recipe(college_rec)
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
spline_rec <- data_rec %>%
step_ns(Pclass, deg_free = 10)
spline_wf <- workflow() %>%
add_model(lm_spec) %>%
add_recipe(spline_rec)
spline_fit <- spline_wf %>%
fit(data = Titanic_clean)
View(Titanic_clean)
Titanic_clean
spline_wf
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
spline_rec <- data_rec %>%
step_ns(Pclass, deg_free = 10)
spline_wf <- workflow() %>%
add_model(lm_spec) %>%
add_recipe(spline_rec)
spline_fit <- spline_wf %>%
fit(data = Titanic_clean)
spline_rec
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
spline_rec <- data_rec %>%
step_ns(Pclass, deg_free = 3)
spline_wf <- workflow() %>%
add_model(lm_spec) %>%
add_recipe(spline_rec)
spline_fit <- spline_wf %>%
fit(data = Titanic_clean)
Titanic_clean
fit_resamples(
spline_wf,
resamples = Titanic_clean_5,
metrics = metric_set(mae,rmse,rsq)
) %>% collect_metrics()
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
spline_rec <- data_rec %>%
step_ns(Pclass, deg_free = 3)
spline_wf <- workflow() %>%
add_model(lm_spec) %>%
add_recipe(spline_rec)
spline_fit <- spline_wf %>%
fit(data = Titanic_clean)
